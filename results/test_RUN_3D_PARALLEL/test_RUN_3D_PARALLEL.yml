# This file is a replication of the example3.xlsx parameter file
# but with a different time period of modelling and only 1 year output

# Lines preceeded by #! are lines that are not allowed in the current excel version

RUN_INFO:
- { name:                       RUN_3D_PARALLEL,
    index:                      1,
    number_of_cores:            4,       # indicate the maximum number of cores to activate in pool. Matlab will start as many as possible, up to this number.
    number_of_tiles:            5,  
    param_file_number:          [1, 2, 3, 4, 5],
    run_mode:                   parallel,          # 'parallel' or 'sequential'
    tile_class:                 TILE_1D_standard,
    tile_class_index:           1,
  } # end of run_info


TILE:
- { name:                       TILE_1D_standard,
    index:                      1,
    builder:                    new_init,
    latitude:                   79,                 #[degree]        geographical coordinates
    longitude:                  10,                 #[degree]            
    altitude:                   20,                 #[m]            surface elevation a.s.l.
    domain_depth:               100,                #[m]            vertical extent of the model domain - should match a GRID point
    area:                       1,                  #[m2]            area of the model realization
    forcing_class:              FORCING_seb_mat,                
    forcing_class_index:        1,                        
    grid_class:                 GRID_user_defined,
    grid_class_index:           1,         
    out_class:                  OUT_all_tagged,
    out_class_index:            1,           
    strat_classes_class:        STRAT_classes,
    strat_classes_class_index:  1,           
    strat_statvar_class:        [STRAT_layers, STRAT_linear],
    strat_statvar_class_index:  [1,            1           ],
    lateral_class:              LATERAL_1D,
    lateral_class_index:        1,            
    lateral_IA_classes:         [],
    lateral_IA_classes_index:   [],
    restart_file_path:          './results/example3/',
    restart_file_name:          'example3_last_timestep.mat',
  } # end of tile   

# More TILEs can be added by simply listing them below, and assigning a unique index:
#- { index:                      2
#    name:                       TILE_1D_standard
#    coordinates:                [0.0, 0.0, 0.0]                   # 3 floats identifying X/Y/Z or lat/lon/elev
#    crs:                        XYZ                               # XYZ: cartesian system, epsg code eg. 4326 
#    ...etc...



OUT:
- { name:               OUT_all_tagged,
    index:              1,
    output_timestep:    1,                  # [days]
    save_date:          01.09.,             # provide in format dd.mm.   date of the year at which the output is written to an output file
    save_interval:      ,                   # [y] if left empty, the entire output will be written out at the end
    tag:                yml,                # tag added to run_name before output date
  } # end of output

         

FORCING:
# NEW CLASS 
- { index:                      1,
    name:                       FORCING_seb_mat,
    filename:                   CG_Beaufort_81_880_short_crop_1yr.mat,
    forcing_path:               './forcing/',
#    start_time:                 01.07.1980,                       # provide in format dd.mm.yyyy (????); if left empty, the first timestamp of the forcing data set will be used                                   
#    end_time:                   30.06.1985,                       # provide in format dd.mm.yyyy; if left empty, the last timestamp of the forcing data set will be used                                   
    start_time:                 [1980, 08, 01],                    # provide in format dd.mm.yyyy (????); if left empty, the first timestamp of the forcing data set will be used                                   
    end_time:                   [1980, 12, 01],                    # provide in format dd.mm.yyyy; if left empty, the last timestamp of the forcing data set will be used                                   

    rain_fraction:              1,                  # [-]         # rainfall in forcing file multiplied by this number
    snow_fraction:              0,                  # [-]         # snowfall in forcing file multiplied by this number
    latitude:                   70,                 #[degree]     # geographical coordinates
    longitude:                  10,                 #[degree]     #       
    altitude:                   20,                 #[m]          # surface elevation a.s.l.
    domain_depth:               100,                #[m]          # vertical extent of the model domain - should match a GRID point
    heatFlux_lb:                0.05,               # [W/m2]      # geothermal heat flux
    airT_height:                2,                  # [m]         # height of air temperature
    wind_height:                2,                  # [m]         # height of wind measurements
  } # end of forcing



GRID:
- { name:               GRID_user_defined,
    index:              1,   
    grid:    { # A matrix always has 3 fields: type, names (of columns), values
               type:    V_MATRIX,
               names:    [ upper,    spacing,    lower ],
               values:  [[     0,        0.05,       1,],
                         [     1,        0.10,       2,],
                         [     2,        0.20,      10,],
                         [    10,        0.50,      20,],
                         [    20,        5.00,     100,]],
             }, 
  } # end of grid



STRATIGRAPHY_CLASSES:
- { name:               STRAT_classes,
    index:              1,   
    classes: { # A matrix always has 3 fields: type, names (of columns), values
               type:    STRAT_MATRIX,    # A STRAT_MATRIX always has depth as the first column!
               names:    [ depth,  class_name,                            class_index,],
               values:  [[     0,  GROUND_freezeC_bucketW_Xice_seb_snow,            1,],
                         [    10,  GROUND_freeW_seb,                                1,]],
             },
    snow_class_name:           SNOW_crocus_bucketW_seb,
    snow_class_index:          1,
    sleeping_classes_name:     [LAKE_simple_bucketW_seb_snow],
    sleeping_classes_index:    [1],
  } # end of strat_classes



STRATIGRAPHY_STATVAR:
- { name:               STRAT_layers,
    index:              1,   
    layers:  { # A matrix always has 3 fields: type, names (of columns), values
               type:    STRAT_MATRIX,    # A STRAT_MATRIX always has depth as the first column!
               names:    [ depth,  waterIce,  mineral,  organic,  Xice,  field_capacity,  soil_type,  satHydraulicConductivity],
               values:  [[   0  ,      0.30,     0.50,        0,   0.0,            0.30,          1,                   1.00e-6],
                         [   0.5,      0.50,     0.50,        0,   0.5,            0.30,          2,                   1.00e-6],
                         [   10 ,      0.5,      0.50,        0,   0.0,            0.30,          1,                   1.00e-6]],
             },
  } # end of strat_layers


SUBSURFACE_CLASS:
  # NEW CLASS
- { name:                   GROUND_freezeC_bucketW_Xice_seb_snow,
    index:                  1,
   
    albedo:                 0.15,           #{default: 0.15,  unit: [-]},       # surface albedo                    
    epsilon:                0.99,           #{default: 0.99,  unit: [-]},       # surface emissivity
    z0:                     0.001,          #{default: 0.001, unit: [m]},       # roughness length

    hydraulicConductivity:  1.00e-5,        #{default: ,      unit: },
    evaporationDepth:       0.1,            #{default: ,      unit: },
    rootDepth:              0.1,            #{default: ,      unit: },
    ratioET:                0.5,            #{default: ,      unit: },

    LUT_size_waterIce:      1000,
    LUT_size_T:             1000,
    min_T:                  -40,
    min_waterIce:           0.05,
    max_waterIce:           0.97,
    min_mineral_organic:    0.03,
    
    dt_max:                 3600,           #{default: 3600,  unit: [sec]},     # longest possible timestep
    dE_max:                 50000,          #{default: 50000, unit: [J/m3]},    # maximum change of energy per timestep
    dWater_max:             0.01,
    
    threshold_Xwater:       0.05,           #{default:     ,  unit: [m]},       # height of standing water above which a LAKE is triggered
    threshold_Xwater_class: LAKE_simple_bucketW_seb_snow,                       # Lake class that is triggered
    threshold_Xwater_index: 1,                                                  # index of Lake class that is triggered
  } # end of class

# NEW CLASS
- { name:                   GROUND_freeW_seb,
    index:                  1,

    albedo:                 0.15,           #{default: 0.15,  unit: '[-]'},     # surface albedo
    epsilon:                0.99,           #{default: 0.99,  unit: '[-]'},     # surface emissivity
    z0:                     0.001,          #{default: 0.001, unit: '[m]'},     # roughness length
    rs:                     100,            #{default:     ,  unit: },           
    
    dt_max:                 3600,           #{default: 3600,  unit: '[sec]'},   # longest possible timestep
    dE_max:                 50000,          #{default: 50000, unit: '[J/m3]'},  # maximum change of energy per timestep
  } # end of class

# NEW CLASS
- { name:                   LAKE_simple_bucketW_seb_snow,
    index:                  1,

    albedo:                 0.08,           #{default: 0.08,  unit: '[-]'},     # surface albedo
    SW_extinction:          2,              #{default: ?,     unit: '[1/m]'},   # SW extinction coefficient
    epsilon:                0.99,           #{default: 0.99,  unit: '[-]'},     # surface emissivity
    z0:                     0.001,          #{default: 0.001, unit: '[m]'},     # roughness length
    
    dt_max:                 3600,           #{default: 3600,  unit: '[sec]'},   # longest possible timestep
    dE_max:                 50000,          #{default: 50000, unit: '[J/m3]'},  # maximum change of energy per timestep

    threshold_water:        0.05,
    next_season_lake_class: LAKE_simple_unfrozen_bucketW_seb,
  } # end of class

# NEW CLASS
- { name:                   SNOW_crocus_bucketW_seb,
    index:                  1,
    
    slope:                  0,              #{default: ,      unit: },       
    SW_spectral_range1:     0.71,           #{default: ,      unit: },       
    SW_spectral_range2:     0.21,           #{default: ,      unit: },       
    epsilon:                0.99,           #{default: 0.99,  unit: '[-]'},     # surface emissivity
    z0:                     0.001,          #{default: 0.001, unit: [m]},       # roughness length
    rs:                     0,
    timescale_winddrift:    48,             #{default: ,      unit: [hours]},   
    field_capacity:         0.05,          
    hydraulicConductivity:  0.0001,
    swe_per_cell:           0.02,
    max_wind_slab_density:  500,

    dt_max:                 3600,           #{default: 3600,  unit: '[sec]'},   # longest possible timestep
    dE_max:                 50000,          #{default: 50000, unit: [J/m3]},    # maximum change of energy per timestep
    
  } # end of class
# END OF SUBSURFACE CLASSES DEFINITION



LATERAL_CLASS:
# NEW CLASS
- { name:                       LATERAL_1D,
    index:                      1,    
                               
    ia_time_increment:          0.25,            # [day]    
  } # end of class  
# END OF LATERAL_CLASS DEFINITION    



